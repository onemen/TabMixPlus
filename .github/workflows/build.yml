name: Build Firefox Extension XPI

on:
  push:
    branches: [ wip/build-xpi ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Get latest tag version
        id: get-version
        run: |
          version=$(git describe --abbrev=0 --tags | cut -c 2-)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Generate 8-digit date
        id: get-date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Set XPI file name
        run: |
          echo "XPI_NAME=tabmix-dev-build-${{ env.VERSION }}-${{ env.DATE }}" >> $GITHUB_ENV

      - name: Replace version in install.rdf
        run: |
          sed -i "s/1.0.0-unbundeled/${{ env.VERSION }}-${{ env.DATE }}/" addon/install.rdf

      - name: Upload XPI to Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.XPI_NAME }}
          path: addon/

      - name: Get Release ID
        id: get_release
        run: |
          RESPONSE=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/tags/dev-build" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
          echo "$RESPONSE"
          RELEASE_ID=$(echo "$RESPONSE" | jq '.id')
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV

      - name: Delete existing asset
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const releaseId = ${{ env.RELEASE_ID }}
            const assets = await github.rest.repos.listReleaseAssets({
              owner,
              repo,
              release_id: releaseId,
            })
            for (const asset of assets.data) {
              if (asset.name === 'tabmix-dev-build.xpi') {
                await github.rest.repos.deleteReleaseAsset({
                  owner,
                  repo,
                  asset_id: asset.id,
                })
              }
            }

      - name: Move tag to latest commit
        run: |
          git config user.email "tabmix.onemen@gmail.com"
          git config user.name "onemen"
          git tag -fa dev-build
          git push origin :refs/tags/dev-build
          git push origin dev-build

      - name: Upload new asset
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo
            const releaseId = ${{ env.RELEASE_ID }}
            const assetPath = '${{ env.XPI_NAME }}'
            const assetName = 'tabmix-dev-build.xpi'
            const assetContentType = 'application/x-xpinstall'
            const asset = fs.readFileSync(assetPath)
            const assetSize = fs.statSync(assetPath).size
            await github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: releaseId,
              name: assetName,
              data: asset,
              headers: {
                'content-length': assetSize,
                'content-type': assetContentType,
              },
            })
